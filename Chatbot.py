import logging
import asyncio
import threading
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)
from telegram.error import BadRequest

BOT_TOKEN = "8188612626:AAFplAo1fUxgdcB3wu5pEfPVot3fwgWCTWY"
ADMIN_CHAT_ID = 7742758052

# --- –¢–µ–∫—Å—Ç—ã –∏ –º–µ–Ω—é ---
WELCOME_TEXT = "–ü—Ä–∏–≤–µ—Ç, –Ω–∞ —Å–≤—è–∑–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –§–∏–Ω—É—Å–ª—É–≥!\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ üîé"
CABINET_TEXT = "–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–≤–æ–¥—É –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞,\n–í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–¥–µ–ª–∞: +7 (999) 123-45-67"
VKLADY_TEXT = "–£ –Ω–∞—Å –µ—Å—Ç—å 824 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç –Ω–∞–¥–µ–∂–Ω—ã—Ö –±–∞–Ω–∫–æ–≤... –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –¥–æ 30%."
OSAGO_TEXT = "–ü–æ–ª–∏—Å –û–°–ê–ì–û –∑–∞ 5 –º–∏–Ω—É—Ç... –æ—Ç 21 —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏."
CREDIT_TEXT = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –∫—Ä–µ–¥–∏—Ç—ã..."

def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="finance")],
        [InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="cabinet")],
    ])

def finance_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("ü™ô –í–∫–ª–∞–¥—ã", callback_data="vklady")],
        [InlineKeyboardButton("üöó –û–°–ê–ì–û", callback_data="osago")],
        [InlineKeyboardButton("üí≥ –ö—Ä–µ–¥–∏—Ç—ã", callback_data="credit")],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")],
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(WELCOME_TEXT, reply_markup=main_menu())
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=f"üì• –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or user.first_name} ({user.id})"
    )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    user = query.from_user
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=f"üëÜ @{user.username or user.first_name} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {data}"
    )

    try:
        if data == "finance":
            await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=finance_menu())
        elif data == "cabinet":
            await query.edit_message_text(CABINET_TEXT, reply_markup=main_menu())
        elif data == "vklady":
            await query.edit_message_text(VKLADY_TEXT, reply_markup=finance_menu())
        elif data == "osago":
            await query.edit_message_text(OSAGO_TEXT, reply_markup=finance_menu())
        elif data == "credit":
            await query.edit_message_text(CREDIT_TEXT, reply_markup=finance_menu())
        elif data == "back":
            await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())
    except BadRequest as e:
        if "Message is not modified" not in str(e):
            raise

async def admin_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id != ADMIN_CHAT_ID:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    try:
        target_id = int(context.args[0])
        text_to_send = ' '.join(context.args[1:])
        await context.bot.send_message(chat_id=target_id, text=text_to_send)
        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def run_bot():
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(CommandHandler("msg", admin_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

# --- Flask-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è Render ---
flask_app = Flask(__name__)

@flask_app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run_flask():
    flask_app.run(host="0.0.0.0", port=10000)

if __name__ == '__main__':
    threading.Thread(target=run_flask).start()  # Flask –∑–∞–≥–ª—É—à–∫–∞
    asyncio.run(run_bot())   